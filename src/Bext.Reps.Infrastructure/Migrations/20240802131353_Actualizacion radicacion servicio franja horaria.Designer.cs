// <auto-generated />
using System;
using System.Collections.Generic;
using Bext.Reps.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bext.Reps.Infrastructure.Migrations
{
    [DbContext(typeof(RepsDbContext))]
    [Migration("20240802131353_Actualizacion radicacion servicio franja horaria")]
    partial class Actualizacionradicacionserviciofranjahoraria
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bext.Reps.Domain.Entities.ActaConstitucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActoConstitucionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaracterTerritorialId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CiudadExpedicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CiudadExpedicion");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaSocialEstado")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmpresaSocialEstado");

                    b.Property<string>("EntidadExpide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EntidadExpide");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActo")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaActo");

                    b.Property<int?>("NivelAtencionId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroActo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NumeroActo");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActoConstitucionId");

                    b.HasIndex("CaracterTerritorialId");

                    b.HasIndex("NivelAtencionId");

                    b.ToTable("ActasConstitucion", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.CapacidadInstalada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServicioInscritoSedeId")
                        .HasColumnType("int");

                    b.Property<string>("TipoRecurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServicioInscritoSedeId", "TipoRecurso", "Activo")
                        .HasDatabaseName("IX_CapacidadesInstaladas_ServicioInscritoSede_TipoRecurso_Activo");

                    b.ToTable("CapacidadInstalada");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.CaracterTerritorial", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("TipoNaturalezaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipoNaturalezaId");

                    b.ToTable("CaracteresTerritoriales");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.ClasePrestador", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClasesPrestador");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Complejidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Complejidades");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.ContactoEntidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("TipoVinculacionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Identificacion", "Bext.Reps.Domain.Entities.ContactoEntidad.Identificacion#Identificacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<short>("DigitoVerificacion")
                                .HasColumnType("smallint")
                                .HasColumnName("DigitoVerificacion");

                            b1.Property<string>("NumeroDocumento")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("NumeroDocumento");

                            b1.Property<string>("TipoIdentificacion")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("TipoIdentificacion");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Nombre", "Bext.Reps.Domain.Entities.ContactoEntidad.Nombre#Nombre", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("PrimerApellido")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("PrimerApellido");

                            b1.Property<string>("PrimerNombre")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("PrimerNombre");

                            b1.Property<string>("RazonSocial")
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)")
                                .HasColumnName("RazonSocial");

                            b1.Property<string>("SegundoApellido")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("SegundoApellido");

                            b1.Property<string>("SegundoNombre")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("SegundoNombre");
                        });

                    b.HasKey("Id");

                    b.HasIndex("TipoVinculacionId");

                    b.ToTable("ContactosEntidad", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Criterio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("EstandarId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstandarId");

                    b.ToTable("Criterios");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DetalleEvaluacionServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CriterioId")
                        .HasColumnType("int");

                    b.Property<bool>("Cumple")
                        .HasColumnType("bit");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("EstandarId")
                        .HasColumnType("int");

                    b.Property<int?>("EvaluacionServicioId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CriterioId");

                    b.HasIndex("EstandarId");

                    b.HasIndex("EvaluacionServicioId");

                    b.ToTable("DetalleEvaluacionServicio");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DiaAtencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("FranjaHorariaId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FranjaHorariaId");

                    b.ToTable("DiasAtencion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DocumentoConstitucion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SubTipoNaturalezaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubTipoNaturalezaId");

                    b.ToTable("DocumentosConstitucion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DocumentoEntidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descripcion");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int")
                        .HasColumnName("EntidadId");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Link");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("DocumentosEntidad", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Entidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActaConstitucionId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTipoNaturaleza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<string>("TipoNaturalezaId")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("TipoPersonaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TipoPrestadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("DatosContacto", "Bext.Reps.Domain.Entities.Entidad.DatosContacto#Contacto", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)")
                                .HasColumnName("Email");

                            b1.Property<string>("SitioWeb")
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)")
                                .HasColumnName("SitioWeb");

                            b1.Property<string>("TelefonoFax")
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("TelefonoFax");

                            b1.Property<string>("TelefonoFijo")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("TelefonoFijo");

                            b1.Property<string>("TelefonoMovil")
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("TelefonoMovil");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Identificacion", "Bext.Reps.Domain.Entities.Entidad.Identificacion#Identificacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<short>("DigitoVerificacion")
                                .HasColumnType("smallint")
                                .HasColumnName("DigitoVerificacion");

                            b1.Property<string>("NumeroDocumento")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("NumeroDocumento");

                            b1.Property<string>("TipoIdentificacion")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("TipoIdentificacion");
                        });

                    b.HasKey("Id");

                    b.HasIndex("ActaConstitucionId");

                    b.HasIndex("TerceroId");

                    b.HasIndex("TipoNaturalezaId");

                    b.HasIndex("TipoPersonaId");

                    b.HasIndex("TipoPrestadorId");

                    b.ToTable("Entidades", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Especificidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Especificidades");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.EspecificidadPorServicioInscritoSede", b =>
                {
                    b.Property<int>("ServicioInscritoSedeId")
                        .HasColumnType("int");

                    b.Property<int>("EspecificidadId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServicioInscritoSedeId", "EspecificidadId");

                    b.HasIndex("EspecificidadId");

                    b.HasIndex("ServicioId");

                    b.ToTable("EspecificidadPorServiciosInscritosSede");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Estandar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estandares");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.EstandarPorServicio", b =>
                {
                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int>("EstandarId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServicioId", "EstandarId");

                    b.HasIndex("EstandarId");

                    b.ToTable("EstandarPorServicios");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.EvaluacionServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("ServicioInscritoSedeId")
                        .HasColumnType("int");

                    b.Property<int>("TipoEvaluacion")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServicioInscritoSedeId");

                    b.ToTable("EvaluacionServicio");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.FranjaHoraria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("HoraApertura")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraCierre")
                        .HasColumnType("time");

                    b.Property<int>("ServicioInscritoSedeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ServicioInscritoSedeId");

                    b.ToTable("FranjasHoraria");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.GrupoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("Modalidad")
                        .HasColumnType("int");

                    b.Property<string>("ModalidadCodigo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GruposServicio");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.MovimientoSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoSolicitud")
                        .HasColumnType("int");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudId");

                    b.ToTable("MovimientoSolicitud");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.NivelAtencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NivelesAtencion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.PeriodoRepresentacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoRepresentacion")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactoId");

                    b.HasIndex("EntidadId");

                    b.ToTable("PeriodoRepresentacion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Sede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentroPoblado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int")
                        .HasColumnName("EntidadId");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<string>("NombreResponsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zona")
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("DatosContacto", "Bext.Reps.Domain.Entities.Sede.DatosContacto#Contacto", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)")
                                .HasColumnName("Email");

                            b1.Property<string>("SitioWeb")
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)")
                                .HasColumnName("SitioWeb");

                            b1.Property<string>("TelefonoFax")
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("TelefonoFax");

                            b1.Property<string>("TelefonoFijo")
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("TelefonoFijo");

                            b1.Property<string>("TelefonoMovil")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("TelefonoMovil");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Ubicacion", "Bext.Reps.Domain.Entities.Sede.Ubicacion#Ubicacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Departamento")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Departamento");

                            b1.Property<string>("Direccion")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Municipio")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Municipio");
                        });

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.ToTable("Sedes", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("GrupoServicioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoServicioId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.ServicioInscritoSede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComplejidadServicioId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntidadId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("GrupoServicioId")
                        .HasColumnType("int");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("ServicioInscritoSede");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoSolicitud")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoSolicitud")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.SubTipoNaturaleza", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("TipoNaturalezaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipoNaturalezaId");

                    b.ToTable("SubTiposNaturaleza");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Tercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("TipoPersonaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("DatosContacto", "Bext.Reps.Domain.Entities.Tercero.DatosContacto#Contacto", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)")
                                .HasColumnName("Email");

                            b1.Property<string>("SitioWeb")
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)")
                                .HasColumnName("SitioWeb");

                            b1.Property<string>("TelefonoFax")
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("TelefonoFax");

                            b1.Property<string>("TelefonoFijo")
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("TelefonoFijo");

                            b1.Property<string>("TelefonoMovil")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("TelefonoMovil");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Identificacion", "Bext.Reps.Domain.Entities.Tercero.Identificacion#Identificacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<short>("DigitoVerificacion")
                                .HasColumnType("smallint")
                                .HasColumnName("DigitoVerificacion");

                            b1.Property<string>("NumeroDocumento")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("NumeroDocumento");

                            b1.Property<string>("TipoIdentificacion")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("TipoIdentificacion");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Nombre", "Bext.Reps.Domain.Entities.Tercero.Nombre#Nombre", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("PrimerApellido")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("PrimerApellido");

                            b1.Property<string>("PrimerNombre")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("PrimerNombre");

                            b1.Property<string>("RazonSocial")
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)")
                                .HasColumnName("RazonSocial");

                            b1.Property<string>("SegundoApellido")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("SegundoApellido");

                            b1.Property<string>("SegundoNombre")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("SegundoNombre");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Ubicacion", "Bext.Reps.Domain.Entities.Tercero.Ubicacion#Ubicacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Departamento")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("Departamento");

                            b1.Property<string>("Direccion")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("nvarchar(250)")
                                .HasColumnName("Direccion");

                            b1.Property<string>("Municipio")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("Municipio");
                        });

                    b.HasKey("Id");

                    b.HasIndex("TipoPersonaId");

                    b.ToTable("Terceros", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposDocumentos");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.TipoIdentidad", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposIdentidad");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.TipoNaturaleza", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposNaturaleza");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.TipoPersona", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("RequiereRepresentante")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposPersona");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.TipoVinculacion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UltimaModificacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UltimaModificacionPor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposVinculacion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.ActaConstitucion", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.DocumentoConstitucion", "ActoConstitucion")
                        .WithMany()
                        .HasForeignKey("ActoConstitucionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bext.Reps.Domain.Entities.CaracterTerritorial", "CaracterTerritorial")
                        .WithMany()
                        .HasForeignKey("CaracterTerritorialId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bext.Reps.Domain.Entities.NivelAtencion", "NivelAtencion")
                        .WithMany()
                        .HasForeignKey("NivelAtencionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ActoConstitucion");

                    b.Navigation("CaracterTerritorial");

                    b.Navigation("NivelAtencion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.CapacidadInstalada", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.ServicioInscritoSede", "ServicioInscritoSede")
                        .WithMany("CapacidadesInstaladas")
                        .HasForeignKey("ServicioInscritoSedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ServicioInscritoSede");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.CaracterTerritorial", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.TipoNaturaleza", "TipoNaturaleza")
                        .WithMany("CaracterTerritorial")
                        .HasForeignKey("TipoNaturalezaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoNaturaleza");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.ContactoEntidad", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.TipoVinculacion", "TipoVinculacion")
                        .WithMany()
                        .HasForeignKey("TipoVinculacionId");

                    b.Navigation("TipoVinculacion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Criterio", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Estandar", "Estandar")
                        .WithMany("Criterios")
                        .HasForeignKey("EstandarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estandar");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DetalleEvaluacionServicio", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Criterio", "Criterio")
                        .WithMany()
                        .HasForeignKey("CriterioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.Estandar", "Estandar")
                        .WithMany()
                        .HasForeignKey("EstandarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.EvaluacionServicio", null)
                        .WithMany("Detalles")
                        .HasForeignKey("EvaluacionServicioId");

                    b.Navigation("Criterio");

                    b.Navigation("Estandar");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DiaAtencion", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.FranjaHoraria", "FranjaHoraria")
                        .WithMany("DiasAtencion")
                        .HasForeignKey("FranjaHorariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FranjaHoraria");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DocumentoConstitucion", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.SubTipoNaturaleza", "SubTipoNaturaleza")
                        .WithMany("DocumentosConstitucion")
                        .HasForeignKey("SubTipoNaturalezaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SubTipoNaturaleza");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DocumentoEntidad", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Entidad", "Entidad")
                        .WithMany("DocumentosEntidad")
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entidad");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Entidad", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.ActaConstitucion", "ActaConstitucion")
                        .WithMany()
                        .HasForeignKey("ActaConstitucionId");

                    b.HasOne("Bext.Reps.Domain.Entities.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.TipoNaturaleza", "TipoNaturaleza")
                        .WithMany()
                        .HasForeignKey("TipoNaturalezaId");

                    b.HasOne("Bext.Reps.Domain.Entities.TipoPersona", "TipoPersona")
                        .WithMany()
                        .HasForeignKey("TipoPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.ClasePrestador", "TipoPrestador")
                        .WithMany()
                        .HasForeignKey("TipoPrestadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActaConstitucion");

                    b.Navigation("Tercero");

                    b.Navigation("TipoNaturaleza");

                    b.Navigation("TipoPersona");

                    b.Navigation("TipoPrestador");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.EspecificidadPorServicioInscritoSede", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Especificidad", "Especificidad")
                        .WithMany()
                        .HasForeignKey("EspecificidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.Servicio", null)
                        .WithMany("Especificidades")
                        .HasForeignKey("ServicioId");

                    b.HasOne("Bext.Reps.Domain.Entities.ServicioInscritoSede", "ServicioInscritoSede")
                        .WithMany()
                        .HasForeignKey("ServicioInscritoSedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Especificidad");

                    b.Navigation("ServicioInscritoSede");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.EstandarPorServicio", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Estandar", "Estandar")
                        .WithMany()
                        .HasForeignKey("EstandarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.Servicio", "Servicio")
                        .WithMany("Estandares")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estandar");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.EvaluacionServicio", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.ServicioInscritoSede", "ServicioInscritoSede")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("ServicioInscritoSedeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ServicioInscritoSede");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.FranjaHoraria", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.ServicioInscritoSede", "ServicioInscritoSede")
                        .WithMany("FranjasHorarias")
                        .HasForeignKey("ServicioInscritoSedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicioInscritoSede");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.MovimientoSolicitud", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Solicitud", "Solicitud")
                        .WithMany("MovimientosSolicitud")
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.PeriodoRepresentacion", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.ContactoEntidad", "Contacto")
                        .WithMany("PeriodosRepresentacion")
                        .HasForeignKey("ContactoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.Entidad", "Entidad")
                        .WithMany("Periodos")
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contacto");

                    b.Navigation("Entidad");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Sede", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Entidad", "Entidad")
                        .WithMany("Sedes")
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entidad");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Servicio", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.GrupoServicio", "GrupoServicio")
                        .WithMany("Servicios")
                        .HasForeignKey("GrupoServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoServicio");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.ServicioInscritoSede", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Entidad", null)
                        .WithMany("Servicios")
                        .HasForeignKey("EntidadId");

                    b.HasOne("Bext.Reps.Domain.Entities.Solicitud", "Solicitud")
                        .WithMany("Servicios")
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.SubTipoNaturaleza", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.TipoNaturaleza", "TipoNaturaleza")
                        .WithMany("SubTipoNaturalezas")
                        .HasForeignKey("TipoNaturalezaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoNaturaleza");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Tercero", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.TipoPersona", "TipoPersona")
                        .WithMany()
                        .HasForeignKey("TipoPersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.ContactoEntidad", b =>
                {
                    b.Navigation("PeriodosRepresentacion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Entidad", b =>
                {
                    b.Navigation("DocumentosEntidad");

                    b.Navigation("Periodos");

                    b.Navigation("Sedes");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Estandar", b =>
                {
                    b.Navigation("Criterios");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.EvaluacionServicio", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.FranjaHoraria", b =>
                {
                    b.Navigation("DiasAtencion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.GrupoServicio", b =>
                {
                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Servicio", b =>
                {
                    b.Navigation("Especificidades");

                    b.Navigation("Estandares");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.ServicioInscritoSede", b =>
                {
                    b.Navigation("CapacidadesInstaladas");

                    b.Navigation("Evaluaciones");

                    b.Navigation("FranjasHorarias");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Solicitud", b =>
                {
                    b.Navigation("MovimientosSolicitud");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.SubTipoNaturaleza", b =>
                {
                    b.Navigation("DocumentosConstitucion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.TipoNaturaleza", b =>
                {
                    b.Navigation("CaracterTerritorial");

                    b.Navigation("SubTipoNaturalezas");
                });
#pragma warning restore 612, 618
        }
    }
}
