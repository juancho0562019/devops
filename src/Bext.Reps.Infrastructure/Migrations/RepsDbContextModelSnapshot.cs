// <auto-generated />
using System;
using System.Collections.Generic;
using Bext.Reps.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bext.Reps.Infrastructure.Migrations
{
    [DbContext(typeof(RepsDbContext))]
    partial class RepsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bext.Reps.Domain.Entities.ActaConstitucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActoConstitucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaracterTerritorial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CiudadExpedicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaSocialEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntidadExpide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaActo")
                        .HasColumnType("datetime2");

                    b.Property<string>("NivelAtencion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroActo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActaConstitucion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Contacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CorreoInstitucional")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CorreoInstitucional");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int")
                        .HasColumnName("EntidadId");

                    b.Property<DateTime?>("FechaDocumentoAutorizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaDocumentoAutorizacion");

                    b.Property<string>("InformacionOficio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("InformacionOficio");

                    b.Property<string>("Profesion")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Profesion");

                    b.Property<string>("TarjetaProfesional")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TarjetaProfesional");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Telefono");

                    b.Property<int>("TipoContacto")
                        .HasColumnType("int")
                        .HasColumnName("TipoContacto");

                    b.Property<int?>("TipoRepresentanteLegal")
                        .HasColumnType("int")
                        .HasColumnName("TipoRepresentanteLegal");

                    b.ComplexProperty<Dictionary<string, object>>("Nombre", "Bext.Reps.Domain.Entities.Contacto.Nombre#Nombre", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("PrimerApellido")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("PrimeApellido");

                            b1.Property<string>("PrimerNombre")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("PrimerNombre");

                            b1.Property<string>("SegundoApellido")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("SegundoApellido");

                            b1.Property<string>("SegundoNombre")
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("SegundoNombre");
                        });

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.ToTable("Contactos", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Link");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<int>("RegistroModalidadId")
                        .HasColumnType("int")
                        .HasColumnName("RegistroModalidadId");

                    b.HasKey("Id");

                    b.HasIndex("RegistroModalidadId");

                    b.ToTable("Documentos", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DocumentoEntidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Descripcion");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int")
                        .HasColumnName("EntidadId");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Link");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("DocumentosEntidad", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DocumentoIdentidad", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentosIdentidad");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Entidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActaConstitucionId")
                        .HasColumnType("int");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CorreoElectronico");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<string>("Sigla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Sigla");

                    b.Property<string>("TelefonoAdicional")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TelefonoAdicional");

                    b.Property<string>("TelefonoPrincipal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TelefonoPrincipal");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.Property<string>("TipoEntidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipoEntidad");

                    b.Property<string>("TipoNaturalezaJuridica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipoNaturalezaJuridica");

                    b.Property<string>("TipoPrestador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ComplexProperty<Dictionary<string, object>>("Ubicacion", "Bext.Reps.Domain.Entities.Entidad.Ubicacion#Ubicacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Departamento")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Departamento");

                            b1.Property<string>("Direccion")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Municipio")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Municipio");

                            b1.Property<string>("Pais")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Pais");
                        });

                    b.HasKey("Id");

                    b.HasIndex("ActaConstitucionId");

                    b.HasIndex("TerceroId");

                    b.ToTable("Entidades", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int?>("CodigoInterno")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("CodigoInterno");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<int?>("EntidadId")
                        .HasColumnType("int")
                        .HasColumnName("EntidadId");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<Guid>("RolAplicacionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RolAplicacionId");

                    b.ComplexProperty<Dictionary<string, object>>("RefreshToken", "Bext.Reps.Domain.Entities.Funcionario.RefreshToken#RefreshToken", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime>("Expiracion")
                                .HasColumnType("datetime2")
                                .HasColumnName("Expiracion");

                            b1.Property<DateTime>("FechaCreacion")
                                .HasColumnType("datetime2")
                                .HasColumnName("FechaCreacion");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Token");
                        });

                    b.HasKey("Id");

                    b.HasIndex("RolAplicacionId");

                    b.ToTable("Funcionarios", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Modalidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("Modalidades", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.RegistroModalidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntidadId")
                        .HasColumnType("int")
                        .HasColumnName("EntidadId");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("EstadoRegistro");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<Guid>("FuncionarioExternoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FuncionarioExternoId");

                    b.Property<Guid>("FuncionarioInternoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FuncionarioInternoId");

                    b.Property<int>("ModalidadId")
                        .HasColumnType("int")
                        .HasColumnName("ModalidadId");

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.HasIndex("FuncionarioExternoId");

                    b.HasIndex("FuncionarioInternoId");

                    b.HasIndex("ModalidadId");

                    b.ToTable("RegistroModalidades", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.RolAplicacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("EsInterno")
                        .HasColumnType("bit")
                        .HasColumnName("EsInterno");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("RolesAplicacion", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Sede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoSede")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CodigoSede");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CorreoElectronico");

                    b.Property<string>("DireccionNotificacionJudicial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DireccionNotificacionJudicial");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int")
                        .HasColumnName("EntidadId");

                    b.Property<string>("MatriculaMercantil")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MatriculaMercantil");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre");

                    b.Property<string>("RegistroMercantil")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RegistroMercantil");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Telefono");

                    b.ComplexProperty<Dictionary<string, object>>("Ubicacion", "Bext.Reps.Domain.Entities.Sede.Ubicacion#Ubicacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Departamento")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Departamento");

                            b1.Property<string>("Direccion")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Municipio")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Municipio");

                            b1.Property<string>("Pais")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Pais");
                        });

                    b.HasKey("Id");

                    b.HasIndex("EntidadId");

                    b.ToTable("Sedes", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Tercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PrimerApellido");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PrimerNombre");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("RazonSocial");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SegundoApellido");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SegundoNombre");

                    b.Property<string>("SitioWeb")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SitioWeb");

                    b.Property<string>("TelefonoFax")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TelefonoFax");

                    b.Property<string>("TelefonoFijo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TelefonoFijo");

                    b.Property<string>("TelefonoMovil")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TelefonoMovil");

                    b.ComplexProperty<Dictionary<string, object>>("Ubicacion", "Bext.Reps.Domain.Entities.Tercero.Ubicacion#Ubicacion", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Departamento")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("Departamento");

                            b1.Property<string>("Direccion")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)")
                                .HasColumnName("Direccion");

                            b1.Property<string>("Municipio")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasColumnName("Municipio");

                            b1.Property<string>("Pais")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("Pais");
                        });

                    b.HasKey("Id");

                    b.ToTable("Terceros", (string)null);
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposDocumentos");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Contacto", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Entidad", "Entidad")
                        .WithMany("Contactos")
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Bext.Reps.Domain.ValueObjects.Identificacion", "Identificacion", b1 =>
                        {
                            b1.Property<int>("ContactoId")
                                .HasColumnType("int");

                            b1.Property<short>("DigitoVerificacion")
                                .HasColumnType("smallint")
                                .HasColumnName("DigitoVerificacion");

                            b1.Property<string>("NumeroDocumento")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("NumeroDocumento");

                            b1.Property<string>("TipoIdentificacionId")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("TipoIdentificacionId");

                            b1.HasKey("ContactoId");

                            b1.HasIndex("TipoIdentificacionId");

                            b1.ToTable("Contactos");

                            b1.WithOwner()
                                .HasForeignKey("ContactoId");

                            b1.HasOne("Bext.Reps.Domain.Entities.DocumentoIdentidad", "TipoIdentificacion")
                                .WithMany()
                                .HasForeignKey("TipoIdentificacionId")
                                .OnDelete(DeleteBehavior.Restrict)
                                .IsRequired();

                            b1.Navigation("TipoIdentificacion");
                        });

                    b.Navigation("Entidad");

                    b.Navigation("Identificacion")
                        .IsRequired();
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Documento", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.RegistroModalidad", "RegistroModalidad")
                        .WithMany("Documentos")
                        .HasForeignKey("RegistroModalidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistroModalidad");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.DocumentoEntidad", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Entidad", "Entidad")
                        .WithMany("DocumentosEntidad")
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entidad");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Entidad", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.ActaConstitucion", "ActaConstitucion")
                        .WithMany()
                        .HasForeignKey("ActaConstitucionId");

                    b.HasOne("Bext.Reps.Domain.Entities.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Bext.Reps.Domain.ValueObjects.Identificacion", "Identificacion", b1 =>
                        {
                            b1.Property<int>("EntidadId")
                                .HasColumnType("int");

                            b1.Property<short>("DigitoVerificacion")
                                .HasColumnType("smallint")
                                .HasColumnName("DigitoVerificacion");

                            b1.Property<string>("NumeroDocumento")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("NumeroDocumento");

                            b1.Property<string>("TipoIdentificacionId")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("TipoIdentificacionId");

                            b1.HasKey("EntidadId");

                            b1.HasIndex("TipoIdentificacionId");

                            b1.ToTable("Entidades");

                            b1.WithOwner()
                                .HasForeignKey("EntidadId");

                            b1.HasOne("Bext.Reps.Domain.Entities.DocumentoIdentidad", "TipoIdentificacion")
                                .WithMany()
                                .HasForeignKey("TipoIdentificacionId")
                                .OnDelete(DeleteBehavior.Restrict)
                                .IsRequired();

                            b1.Navigation("TipoIdentificacion");
                        });

                    b.Navigation("ActaConstitucion");

                    b.Navigation("Identificacion")
                        .IsRequired();

                    b.Navigation("Tercero");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Funcionario", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.RolAplicacion", "RolAplicacion")
                        .WithMany("Funcionarios")
                        .HasForeignKey("RolAplicacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RolAplicacion");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.RegistroModalidad", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Entidad", "Entidad")
                        .WithMany("RegistrosModalidad")
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.Funcionario", "FuncionarioExterno")
                        .WithMany()
                        .HasForeignKey("FuncionarioExternoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.Funcionario", "FuncionarioInterno")
                        .WithMany()
                        .HasForeignKey("FuncionarioInternoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Bext.Reps.Domain.Entities.Modalidad", "Modalidad")
                        .WithMany("RegistrosModalidad")
                        .HasForeignKey("ModalidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entidad");

                    b.Navigation("FuncionarioExterno");

                    b.Navigation("FuncionarioInterno");

                    b.Navigation("Modalidad");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Sede", b =>
                {
                    b.HasOne("Bext.Reps.Domain.Entities.Entidad", "Entidad")
                        .WithMany("Sedes")
                        .HasForeignKey("EntidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Entidad");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Tercero", b =>
                {
                    b.OwnsOne("Bext.Reps.Domain.ValueObjects.Identificacion", "Identificacion", b1 =>
                        {
                            b1.Property<int>("TerceroId")
                                .HasColumnType("int");

                            b1.Property<short>("DigitoVerificacion")
                                .HasColumnType("smallint")
                                .HasColumnName("DigitoVerificacion");

                            b1.Property<string>("NumeroDocumento")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)")
                                .HasColumnName("NumeroDocumento");

                            b1.Property<string>("TipoIdentificacionId")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("TipoIdentificacionId");

                            b1.HasKey("TerceroId");

                            b1.HasIndex("TipoIdentificacionId");

                            b1.ToTable("Terceros");

                            b1.WithOwner()
                                .HasForeignKey("TerceroId");

                            b1.HasOne("Bext.Reps.Domain.Entities.DocumentoIdentidad", "TipoIdentificacion")
                                .WithMany()
                                .HasForeignKey("TipoIdentificacionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("TipoIdentificacion");
                        });

                    b.Navigation("Identificacion")
                        .IsRequired();
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Entidad", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("DocumentosEntidad");

                    b.Navigation("RegistrosModalidad");

                    b.Navigation("Sedes");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.Modalidad", b =>
                {
                    b.Navigation("RegistrosModalidad");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.RegistroModalidad", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("Bext.Reps.Domain.Entities.RolAplicacion", b =>
                {
                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
